// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0

'use strict';

// MODULES //

var isString = require( '@stdlib/assert-is-string' ).isPrimitive;
var hasOwnProp = require( '@stdlib/assert-has-own-property' );
var database = require( '@stdlib/error-tools-database' );
var inverse = require( '@stdlib/utils-object-inverse' );
var format = require( '@stdlib/error-tools-fmtprodmsg' );


// VARIABLES //

var db;


// MAIN //

/**
* Returns a two-character error identifier corresponding to a provided error message.
*
* @param {string} msg - error message
* @throws {TypeError} must provide a string
* @returns {(string|null)} two-character error identifier
*
* @example
* var v = msg2id( 'invalid option. `%s` option must be an array. Option: `%s`.' );
* // returns '8Z'
*/
function msg2id( msg ) {
	if ( !isString( msg ) ) {
		throw new TypeError( format( "0Nx3B,IL", msg ) );
	}
	if ( !db ) {
		db = inverse( database() );
	}
	if ( hasOwnProp( db, msg ) ) {
		return db[ msg ];
	}
	return null;
}


// EXPORTS //

module.exports = msg2id;
